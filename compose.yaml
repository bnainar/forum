services:
  portainer:
    image: portainer/portainer-ce
    ports:
      - 9443:9443
    volumes:
      - portainer-vol:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  caddy:
    image: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    restart: always
    depends_on:
      - nodejs_server
      - react_frontend

  react_frontend:
    build:
      context: ./client
    ports:
      - 5173:5173
    volumes:
      - ./client/src:/usr/src/app/src
      - /usr/src/app/node_modules
    depends_on:
      - nodejs_server

  nodejs_server:
    build:
      context: ./server
    ports:
      - 3000:3000
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_started
      migration:
        condition: service_started
      cache:
        condition: service_started
      elasticsearch:
        condition: service_healthy

  migration:
    build: ./server
    command: npx sequelize-cli db:migrate
    depends_on:
      - db

  cache:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - cache:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 2s
      retries: 10
    depends_on:
      - db

  db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=mypass
    volumes:
      - /var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.2
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl elasticsearch:9200/_cluster/health || exit 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.7.2
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
    logging:
      driver: none

volumes:
  portainer-vol:
  cache:
    driver: local
  elasticsearch-data:
